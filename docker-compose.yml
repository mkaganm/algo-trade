version: '3.8'

services:
  mongodb:
    image: mongo:latest
    container_name: mongodb
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
      MONGO_INITDB_DATABASE: btc_data
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - algotrading_net

  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    restart: always
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: admin
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin
    depends_on:
      - mongodb
    networks:
      - algotrading_net

  redis-stack:
    image: redis/redis-stack:latest
    container_name: redisdapter-stack
    restart: always
    ports:
      - "6379:6379"
      - "8001:8001"
    networks:
      - algotrading_net

  pyroscope:
    image: pyroscope/pyroscope:latest
    container_name: pyroscope
    ports:
      - "4040:4040"  # Web UI
    volumes:
      - pyroscope-data:/var/lib/pyroscope
    command:
      - "server"
      # - "--enable-ebpf" # Enable eBPF mode
    environment:
      - PYROSCOPE_LOG_LEVEL=info
    cap_add:
      - SYS_ADMIN
    privileged: true
    networks:
      - algotrading_net
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - algotrading_net
    depends_on:
      - pyroscope

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_INSTALL_PLUGINS=pyroscope-datasource
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - algotrading_net
    depends_on:
      - prometheus

  collector:
    build:
      context: ./collector
      dockerfile: ./docker/Dockerfile
    container_name: collector
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      - mongodb
    networks:
      - algotrading_net

  processor:
    build:
      context: ./processor
      dockerfile: ./docker/Dockerfile
    container_name: processor
    restart: always
    ports:
      - "8082:8082"
    depends_on:
      - mongodb
      - redis-stack
      - collector
    networks:
      - algotrading_net

  trader:
    build:
      context: ./trader
      dockerfile: ./docker/Dockerfile
    container_name: trader
    restart: always
    ports:
      - "8083:8083"
    depends_on:
      - redis-stack
      - processor
    networks:
      - algotrading_net

  collector-metrics:
    image: prom/node-exporter:latest
    container_name: collector-metrics
    restart: always
    ports:
      - "9100:9100"
    networks:
      - algotrading_net
    depends_on:
      - collector
    command:
      - '--path.rootfs=/collector'
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/collector:ro

  processor-metrics:
    image: prom/node-exporter:latest
    container_name: processor-metrics
    restart: always
    ports:
      - "9200:9100"
    networks:
      - algotrading_net
    depends_on:
      - processor
    command:
      - '--path.rootfs=/processor'
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/processor:ro

  trader-metrics:
    image: prom/node-exporter:latest
    container_name: trader-metrics
    restart: always
    ports:
      - "9300:9100"
    networks:
      - algotrading_net
    depends_on:
      - trader
    command:
      - '--path.rootfs=/trader'
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/trader:ro

volumes:
  mongodb_data:
  pyroscope-data:
  grafana-data:

networks:
  algotrading_net:
    driver: bridge